<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.haso.system.mapper.SysDictMapper">

	<!-- 通过字典code获取字典数据 -->
	<select id="queryDictItemsByCode" parameterType="String"  resultType="com.haso.common.system.vo.DictModel">
		   SELECT s.item_value AS "value"
		   	, s.item_text AS "text"
		   FROM sys_dict_item s
		   WHERE dict_id =
		   	(SELECT id
		   	FROM sys_dict
		   	WHERE dict_code = #{code})
		   ORDER BY s.sort_order ASC
	</select>
	
	<!-- 通过字典code获取字典数据 -->
	<select id="queryDictTextByKey" parameterType="String"  resultType="String">
		   SELECT s.item_text
		   FROM sys_dict_item s
		   WHERE s.dict_id =
		   	(SELECT id
		   	FROM sys_dict
		   	WHERE dict_code = #{code})
		   AND s.item_value = #{key}
	</select>


	<!--通过查询指定table的 text code 获取字典-->
	<select id="queryTableDictItemsByCode" parameterType="String"  resultType="com.haso.common.system.vo.DictModel">
		SELECT ${text} AS "text"
		   	, ${code} AS "value"
		FROM ${table}
	</select>
	
	<!--通过查询指定table的 text code 获取字典（指定查询条件）-->
	<select id="queryTableDictItemsByCodeAndFilter" parameterType="String"  resultType="com.haso.common.system.vo.DictModel">
		 SELECT ${text} AS "text"
		   	, ${code} AS "value"
		 FROM ${table}
		<if test="filterSql != null and filterSql != ''">
			WHERE ${filterSql}
		</if>
	</select>
	
	<!--通过查询指定table的 text code key 获取字典值-->
	<select id="queryTableDictTextByKey" parameterType="String" resultType="String">
		   SELECT ${text} AS "text"
		   FROM ${table}
		   WHERE ${code}= #{key}
	</select>

	<!--通过查询指定table的 text code key 获取字典值，包含value-->
	<select id="queryTableDictByKeys" parameterType="String" resultType="com.haso.common.system.vo.DictModel">
		SELECT ${text} AS "text"
			, ${code} AS "value"
		FROM ${table}
		WHERE ${code} in
		<foreach item="key" collection="keyArray" open="(" separator="," close=")">
			#{key}
		</foreach>
	</select>

	<!-- 重复校验 sql语句 -->
	<select id="duplicateCheckCountSql" resultType="Long" parameterType="com.haso.system.model.DuplicateCheckVo">
		SELECT COUNT(*)
		FROM ${tableName}
		WHERE ${fieldName} = #{fieldVal}
		 AND id &lt;&gt; #{dataId}
	</select>
	
	<!-- 重复校验 sql语句 -->
	<select id="duplicateCheckCountSqlNoDataId" resultType="Long" parameterType="com.haso.system.model.DuplicateCheckVo">
		SELECT COUNT(*)
		FROM ${tableName}
		WHERE ${fieldName} = #{fieldVal} and delete_flg='0'
	</select>
		
	<!-- 查询部门信息 作为字典数据 -->
	<select id="queryAllDepartBackDictModel" resultType="com.haso.common.system.vo.DictModel">
		SELECT id AS "value"
			,depart_name AS "text"
		FROM sys_depart
		WHERE del_flag = '0'
	</select>
	
		<!-- 查询用户信息 作为字典数据 -->
	<select id="queryAllUserBackDictModel" resultType="com.haso.common.system.vo.DictModel">
		SELECT username AS "value"
			, realname AS "text"
		FROM sys_user
		WHERE del_flag = '0'
	</select>
	
	<!--通过查询指定table的 text code 获取字典数据，且支持关键字查询 -->
	<select id="queryTableDictItems" parameterType="String"  resultType="com.haso.common.system.vo.DictModel">
		SELECT ${text} AS "text"
			, ${code} AS "value"
		FROM ${table}
		WHERE ${text} LIKE #{keyword}
	</select>
	
	<!-- 根据表名、显示字段名、存储字段名、父ID查询树 -->
	<select id="queryTreeList" parameterType="Object" resultType="com.haso.system.model.TreeSelectModel">
		SELECT ${text} as "title",
			   ${code} as "key",
			   <if test="hasChildField != null and hasChildField != ''">
			   (CASE WHEN ${hasChildField} = '1' THEN 0 ELSE 1 END) AS isLeaf,
			   </if>
			   ${pidField} AS parentId
			   FROM ${table}
			   WHERE
			   <choose>
				   <when test="pid != null and pid != ''">
					   ${pidField} = #{pid}
				   </when>
				   <otherwise>
					   (${pidField} = '' OR ${pidField} IS NULL)
				   </otherwise>
			   </choose>
			   <if test="query!= null">
				   <foreach collection="query.entrySet()" item="value"  index="key" >
				   	AND ${key} = #{value}
				   </foreach>
			   </if>
	</select>
	
	
</mapper>
