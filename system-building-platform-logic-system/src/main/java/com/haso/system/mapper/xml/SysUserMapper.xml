<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.haso.system.mapper.SysUserMapper">
    <!-- 订单用户查询 sql语句 -->
    <select id="selUserList" resultType="com.haso.system.entity.SysUser" parameterType="com.haso.system.entity.SysUser" >
        SELECT * FROM(
            SELECT
            sysu.*
            FROM
            sys_user sysu
            WHERE
            sysu.del_flag = '0'
            <if test="user.username!=null and user.username!=''">
                AND (
                    sysu.username like CONCAT('%',#{user.username},'%')
                OR sysu.realname like CONCAT('%',#{user.username},'%')
                OR sysu.phone like CONCAT('%',#{user.username},'%')
                )
            </if>
            <if test="user.sex!=null and user.sex!=''">
                and sysu.sex = #{user.sex}
            </if>
            <if test="user.status!=null and user.status!=''">
                and sysu.status = #{user.status}
            </if>

        ) AS temp
        where
            1=1
        <!-- 排序 -->
        <if test="column!=null and column!='' and column!=null and column!='' " >
            ORDER BY ${column} ${order}
        </if>

    </select>

    <!-- 根据用户名查询 -->
    <select id="getUserByName" resultType="com.haso.system.entity.SysUser">
        select * from  sys_user  where username = #{username} and del_flag = '0'
    </select>

    <!-- 根据部门Id查询 -->
    <select id="getUserByDepId" resultType="com.haso.system.entity.SysUser">
        select * from sys_user where del_flag = '0' and id in (select user_id from sys_user_depart where dep_id=#{departId})
        <if test="username!=null and username!=''">
            and username = #{username}
        </if>
    </select>

    <!-- 查询用户的所属部门名称信息 -->
    <select id="getDepNamesByUserIds" resultType="com.haso.system.shiro.vo.SysUserDepVo">
        select d.depart_name,ud.user_id from sys_user_depart ud,sys_depart d where d.id = ud.dep_id and ud.user_id in
        <foreach collection="userIds" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <!-- 通过多个部门IDS，查询部门下的用户信息 -->
    <select id="getUserByDepIds" resultType="com.haso.system.entity.SysUser">
        select * from sys_user where del_flag = '0'
        <if test="departIds!=null  and departIds.size()>0">
            and id in (select user_id from sys_user_depart where dep_id in
            <foreach collection="departIds" index="index" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
            )
        </if>
        <if test="username!=null and username!=''">
            and username = #{username}
        </if>
    </select>

    <!-- 根据角色Id查询 -->
    <select id="getUserByRoleId" resultType="com.haso.system.entity.SysUser">
        select * from sys_user where del_flag = '0' and id in (select user_id from sys_user_role where role_id=#{roleId})
        <if test="username!=null and username!=''">
            and username = #{username}
        </if>
    </select>

    <!--  修改用户部门code -->
    <update id="updateUserDepart">
        UPDATE sys_user SET org_code = #{orgCode} where username = #{username}
    </update>

    <!-- 根据手机号查询 -->
    <select id="getUserByPhone"  resultType="com.haso.system.entity.SysUser">
        select * from  sys_user  where phone = #{phone} and del_flag = '0'
    </select>

    <!-- 根据邮箱查询用户信息 -->
    <select id="getUserByEmail" resultType="com.haso.system.entity.SysUser">
        select * from  sys_user  where email = #{email} and del_flag = '0'
    </select>

    <!-- SQL片段：getUserByOrgCode 的 FROM 和 WHERE 部分 -->
    <sql id="getUserByOrgCodeFromSql">
        FROM
        sys_depart
        -- 关联查询出该部门有哪些用户
        INNER JOIN sys_user_depart ON sys_user_depart.dep_id = sys_depart.id
        -- 关联查询出该用户的详细信息
        INNER JOIN sys_user ON sys_user.id = sys_user_depart.user_id
        WHERE
        sys_user.del_flag = "0" AND sys_depart.org_code LIKE '${orgCode}%'

        <if test="userParams != null">
            <if test="userParams.realname != null and userParams.realname != ''">
                AND sys_user.realname LIKE '%${userParams.realname}%'
            </if>
            <if test="userParams.workNo != null and userParams.workNo != ''">
                AND sys_user.work_no LIKE '%${userParams.workNo}%'
            </if>
        </if>
    </sql>

    <!-- 根据 orgCode 查询用户，包括子部门下的用户 -->
    <select id="getUserByOrgCode" resultType="com.haso.system.model.SysUserSysDepartModel">
        SELECT
        sys_user.id AS "sys_user.id",
        sys_user.realname AS "sys_user.realname",
        sys_user.work_no AS "sys_user.work_no",
        sys_user.post AS "sys_user.post",
        sys_user.telephone AS "sys_user.telephone",
        sys_user.email AS "sys_user.email",
        sys_user.phone AS "sys_user.phone",
        sys_depart.id AS "sys_depart.id",
        sys_depart.depart_name AS "sys_depart.depart_name"
        <include refid="getUserByOrgCodeFromSql"/>
        ORDER BY
        sys_depart.org_code ASC
    </select>

    <!-- 查询 getUserByOrgCode 的总数-->
    <select id="getUserByOrgCodeTotal" resultType="java.lang.Integer">
        SELECT COUNT(1) <include refid="getUserByOrgCodeFromSql"/>
    </select>

    <!-- 批量删除角色的与用户关系-->
    <update id="deleteBathRoleUserRelation">
        delete from sys_user_role
        where role_id in
        <foreach item="id" collection="roleIdArray" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
    <!-- 批量删除角色的与权限关系-->
    <update id="deleteBathRolePermissionRelation">
        delete from sys_role_permission
        where role_id in
        <foreach item="id" collection="roleIdArray" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <!-- 查询被逻辑删除的用户 -->
    <select id="selectLogicDeleted" resultType="com.haso.system.entity.SysUser">
        SELECT * FROM sys_user ${ew.customSqlSegment}
    </select>

    <!-- 更新被逻辑删除的用户 -->
    <update id="revertLogicDeleted">
        UPDATE
        sys_user
        SET
        del_flag = "0",
        update_by = #{entity.updateBy},
        update_time = #{entity.updateTime}
        WHERE
        del_flag = "1"
        AND id IN (${userIds})
    </update>

    <!-- 彻底删除被逻辑删除的用户 -->
    <delete id="deleteLogicDeleted">
        DELETE FROM sys_user WHERE del_flag = "1" AND id IN (${userIds})
    </delete>

<!--    &lt;!&ndash; 用户选择一览查询 sql语句 &ndash;&gt;-->
<!--    <select id="selUserView" resultType="com.haso.sysp.module.common.vo.LookupUserView" parameterType="com.haso.sysp.module.common.vo.LookupUserView" >-->
<!--        SELECT-->
<!--        sysUser.*-->
<!--        , dep.depart_name-->
<!--        FROM-->
<!--        sys_user sysUser-->
<!--        LEFT JOIN sys_depart dep-->
<!--        ON dep.org_code = sysUser.org_code-->
<!--        WHERE-->
<!--        sysUser.del_flag = '0'-->
<!--        <if test="userView.username!=null and userView.username!=''" >-->
<!--            AND sysUser.username LIKE CONCAT('%',#{userView.username},'%')-->
<!--        </if>-->
<!--        <if test="userView.realname != null and userView.realname != ''" >-->
<!--            AND sysUser.realname LIKE CONCAT('%',#{userView.realname},'%')-->
<!--        </if>-->
<!--        <if test="userView.workNo !=null and userView.workNo !=''" >-->
<!--            AND sysUser.work_no LIKE CONCAT('%',#{userView.workNo},'%')-->
<!--        </if>-->
<!--        <if test="userView.post !=null and userView.post !=''" >-->
<!--            AND sysUser.post LIKE CONCAT('%',#{userView.post},'%')-->
<!--        </if>-->
<!--        <if test="userView.orgCode != null and userView.orgCode != ''" >-->
<!--            AND dep.org_code IN #{userView.orgCode}-->
<!--        </if>-->

<!--    </select>-->

</mapper>